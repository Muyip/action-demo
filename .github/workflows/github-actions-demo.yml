name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
env:
  SERVICE_PORT: 8888
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Use global env
        run: echo $SERVICE_PORT
      - name: Show process
        run: ps xf -f
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: echo '1.2.3' > version.txt
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-version
          path: version.txt

  More-Action:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Use local env
        run: echo $SERVICE_PORT
        env:
          SERVICE_PORT: 9999
      - name: Show process
        run: ps xf -f
      - run: echo "üçè This job's status is ${{ job.status }}."

  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.14', '1.15', '1.16.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Task Done
        run: echo 'TASK DONE!!!'

  Read-Version:
    runs-on: ubuntu-latest
    needs:
      - Explore-GitHub-Actions

    steps:
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-version
          path: version.txt
      - run: cat version.txt
